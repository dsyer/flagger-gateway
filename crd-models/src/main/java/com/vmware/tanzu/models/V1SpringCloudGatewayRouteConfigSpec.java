/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vmware.tanzu.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vmware.tanzu.models.V1SpringCloudGatewayRouteConfigSpecBasicAuth;
import com.vmware.tanzu.models.V1SpringCloudGatewayRouteConfigSpecOpenapi;
import com.vmware.tanzu.models.V1SpringCloudGatewayRouteConfigSpecRoutesInner;
import com.vmware.tanzu.models.V1SpringCloudGatewayRouteConfigSpecService;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * V1SpringCloudGatewayRouteConfigSpec
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class V1SpringCloudGatewayRouteConfigSpec {
  public static final String SERIALIZED_NAME_BASIC_AUTH = "basicAuth";
  @SerializedName(SERIALIZED_NAME_BASIC_AUTH)
  private V1SpringCloudGatewayRouteConfigSpecBasicAuth basicAuth;

  public static final String SERIALIZED_NAME_OPENAPI = "openapi";
  @SerializedName(SERIALIZED_NAME_OPENAPI)
  private V1SpringCloudGatewayRouteConfigSpecOpenapi openapi;

  public static final String SERIALIZED_NAME_ROUTES = "routes";
  @SerializedName(SERIALIZED_NAME_ROUTES)
  private List<V1SpringCloudGatewayRouteConfigSpecRoutesInner> routes;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private V1SpringCloudGatewayRouteConfigSpecService service;

  public V1SpringCloudGatewayRouteConfigSpec() {
  }

  public V1SpringCloudGatewayRouteConfigSpec basicAuth(V1SpringCloudGatewayRouteConfigSpecBasicAuth basicAuth) {
    this.basicAuth = basicAuth;
    return this;
  }

   /**
   * Get basicAuth
   * @return basicAuth
  **/
  @jakarta.annotation.Nullable
  public V1SpringCloudGatewayRouteConfigSpecBasicAuth getBasicAuth() {
    return basicAuth;
  }

  public void setBasicAuth(V1SpringCloudGatewayRouteConfigSpecBasicAuth basicAuth) {
    this.basicAuth = basicAuth;
  }


  public V1SpringCloudGatewayRouteConfigSpec openapi(V1SpringCloudGatewayRouteConfigSpecOpenapi openapi) {
    this.openapi = openapi;
    return this;
  }

   /**
   * Get openapi
   * @return openapi
  **/
  @jakarta.annotation.Nullable
  public V1SpringCloudGatewayRouteConfigSpecOpenapi getOpenapi() {
    return openapi;
  }

  public void setOpenapi(V1SpringCloudGatewayRouteConfigSpecOpenapi openapi) {
    this.openapi = openapi;
  }


  public V1SpringCloudGatewayRouteConfigSpec routes(List<V1SpringCloudGatewayRouteConfigSpecRoutesInner> routes) {
    this.routes = routes;
    return this;
  }

  public V1SpringCloudGatewayRouteConfigSpec addRoutesItem(V1SpringCloudGatewayRouteConfigSpecRoutesInner routesItem) {
    if (this.routes == null) {
      this.routes = new ArrayList<>();
    }
    this.routes.add(routesItem);
    return this;
  }

   /**
   * Array of API routes.
   * @return routes
  **/
  @jakarta.annotation.Nullable
  public List<V1SpringCloudGatewayRouteConfigSpecRoutesInner> getRoutes() {
    return routes;
  }

  public void setRoutes(List<V1SpringCloudGatewayRouteConfigSpecRoutesInner> routes) {
    this.routes = routes;
  }


  public V1SpringCloudGatewayRouteConfigSpec service(V1SpringCloudGatewayRouteConfigSpecService service) {
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @jakarta.annotation.Nullable
  public V1SpringCloudGatewayRouteConfigSpecService getService() {
    return service;
  }

  public void setService(V1SpringCloudGatewayRouteConfigSpecService service) {
    this.service = service;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpringCloudGatewayRouteConfigSpec v1SpringCloudGatewayRouteConfigSpec = (V1SpringCloudGatewayRouteConfigSpec) o;
    return Objects.equals(this.basicAuth, v1SpringCloudGatewayRouteConfigSpec.basicAuth) &&
        Objects.equals(this.openapi, v1SpringCloudGatewayRouteConfigSpec.openapi) &&
        Objects.equals(this.routes, v1SpringCloudGatewayRouteConfigSpec.routes) &&
        Objects.equals(this.service, v1SpringCloudGatewayRouteConfigSpec.service);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basicAuth, openapi, routes, service);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpringCloudGatewayRouteConfigSpec {\n");
    sb.append("    basicAuth: ").append(toIndentedString(basicAuth)).append("\n");
    sb.append("    openapi: ").append(toIndentedString(openapi)).append("\n");
    sb.append("    routes: ").append(toIndentedString(routes)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("basicAuth");
    openapiFields.add("openapi");
    openapiFields.add("routes");
    openapiFields.add("service");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to V1SpringCloudGatewayRouteConfigSpec
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1SpringCloudGatewayRouteConfigSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1SpringCloudGatewayRouteConfigSpec is not found in the empty JSON string", V1SpringCloudGatewayRouteConfigSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1SpringCloudGatewayRouteConfigSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1SpringCloudGatewayRouteConfigSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `basicAuth`
      if (jsonObj.get("basicAuth") != null && !jsonObj.get("basicAuth").isJsonNull()) {
        V1SpringCloudGatewayRouteConfigSpecBasicAuth.validateJsonElement(jsonObj.get("basicAuth"));
      }
      // validate the optional field `openapi`
      if (jsonObj.get("openapi") != null && !jsonObj.get("openapi").isJsonNull()) {
        V1SpringCloudGatewayRouteConfigSpecOpenapi.validateJsonElement(jsonObj.get("openapi"));
      }
      if (jsonObj.get("routes") != null && !jsonObj.get("routes").isJsonNull()) {
        JsonArray jsonArrayroutes = jsonObj.getAsJsonArray("routes");
        if (jsonArrayroutes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routes` to be an array in the JSON string but got `%s`", jsonObj.get("routes").toString()));
          }

          // validate the optional field `routes` (array)
          for (int i = 0; i < jsonArrayroutes.size(); i++) {
            V1SpringCloudGatewayRouteConfigSpecRoutesInner.validateJsonElement(jsonArrayroutes.get(i));
          };
        }
      }
      // validate the optional field `service`
      if (jsonObj.get("service") != null && !jsonObj.get("service").isJsonNull()) {
        V1SpringCloudGatewayRouteConfigSpecService.validateJsonElement(jsonObj.get("service"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1SpringCloudGatewayRouteConfigSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1SpringCloudGatewayRouteConfigSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1SpringCloudGatewayRouteConfigSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1SpringCloudGatewayRouteConfigSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<V1SpringCloudGatewayRouteConfigSpec>() {
           @Override
           public void write(JsonWriter out, V1SpringCloudGatewayRouteConfigSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1SpringCloudGatewayRouteConfigSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1SpringCloudGatewayRouteConfigSpec given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1SpringCloudGatewayRouteConfigSpec
  * @throws IOException if the JSON string is invalid with respect to V1SpringCloudGatewayRouteConfigSpec
  */
  public static V1SpringCloudGatewayRouteConfigSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1SpringCloudGatewayRouteConfigSpec.class);
  }

 /**
  * Convert an instance of V1SpringCloudGatewayRouteConfigSpec to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

