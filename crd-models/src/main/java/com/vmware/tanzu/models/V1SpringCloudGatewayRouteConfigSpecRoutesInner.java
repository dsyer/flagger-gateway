/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vmware.tanzu.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vmware.tanzu.models.V1SpringCloudGatewayRouteConfigSpecRoutesInnerModel;
import com.vmware.tanzu.models.V1SpringCloudGatewayRouteConfigSpecRoutesInnerOpenapi;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * V1SpringCloudGatewayRouteConfigSpecRoutesInner
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class V1SpringCloudGatewayRouteConfigSpecRoutesInner {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<String> filters;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private V1SpringCloudGatewayRouteConfigSpecRoutesInnerModel model;

  public static final String SERIALIZED_NAME_OPENAPI = "openapi";
  @SerializedName(SERIALIZED_NAME_OPENAPI)
  private V1SpringCloudGatewayRouteConfigSpecRoutesInnerOpenapi openapi;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Integer order;

  public static final String SERIALIZED_NAME_PREDICATES = "predicates";
  @SerializedName(SERIALIZED_NAME_PREDICATES)
  private List<String> predicates;

  public static final String SERIALIZED_NAME_SSO_ENABLED = "ssoEnabled";
  @SerializedName(SERIALIZED_NAME_SSO_ENABLED)
  private Boolean ssoEnabled;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOKEN_RELAY = "tokenRelay";
  @SerializedName(SERIALIZED_NAME_TOKEN_RELAY)
  private Boolean tokenRelay;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public V1SpringCloudGatewayRouteConfigSpecRoutesInner() {
  }

  public V1SpringCloudGatewayRouteConfigSpecRoutesInner description(String description) {
    this.description = description;
    return this;
  }

   /**
   * An optional description, intended to apply to all operations in this path.
   * @return description
  **/
  @jakarta.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner filters(List<String> filters) {
    this.filters = filters;
    return this;
  }

  public V1SpringCloudGatewayRouteConfigSpecRoutesInner addFiltersItem(String filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Route filters to allow the modification of the incoming HTTP request or outgoing HTTP response in some manner.
   * @return filters
  **/
  @jakarta.annotation.Nullable
  public List<String> getFilters() {
    return filters;
  }

  public void setFilters(List<String> filters) {
    this.filters = filters;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Used to configure additional parameters for a route, such as http connect and response timeouts.
   * @return metadata
  **/
  @jakarta.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner model(V1SpringCloudGatewayRouteConfigSpecRoutesInnerModel model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @jakarta.annotation.Nullable
  public V1SpringCloudGatewayRouteConfigSpecRoutesInnerModel getModel() {
    return model;
  }

  public void setModel(V1SpringCloudGatewayRouteConfigSpecRoutesInnerModel model) {
    this.model = model;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner openapi(V1SpringCloudGatewayRouteConfigSpecRoutesInnerOpenapi openapi) {
    this.openapi = openapi;
    return this;
  }

   /**
   * Get openapi
   * @return openapi
  **/
  @jakarta.annotation.Nullable
  public V1SpringCloudGatewayRouteConfigSpecRoutesInnerOpenapi getOpenapi() {
    return openapi;
  }

  public void setOpenapi(V1SpringCloudGatewayRouteConfigSpecRoutesInnerOpenapi openapi) {
    this.openapi = openapi;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Route processing order, same as Spring Cloud Gateway
   * @return order
  **/
  @jakarta.annotation.Nullable
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner predicates(List<String> predicates) {
    this.predicates = predicates;
    return this;
  }

  public V1SpringCloudGatewayRouteConfigSpecRoutesInner addPredicatesItem(String predicatesItem) {
    if (this.predicates == null) {
      this.predicates = new ArrayList<>();
    }
    this.predicates.add(predicatesItem);
    return this;
  }

   /**
   * Predicates to match on different attributes of the HTTP request
   * @return predicates
  **/
  @jakarta.annotation.Nullable
  public List<String> getPredicates() {
    return predicates;
  }

  public void setPredicates(List<String> predicates) {
    this.predicates = predicates;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner ssoEnabled(Boolean ssoEnabled) {
    this.ssoEnabled = ssoEnabled;
    return this;
  }

   /**
   * Enable SSO validation
   * @return ssoEnabled
  **/
  @jakarta.annotation.Nullable
  public Boolean getSsoEnabled() {
    return ssoEnabled;
  }

  public void setSsoEnabled(Boolean ssoEnabled) {
    this.ssoEnabled = ssoEnabled;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public V1SpringCloudGatewayRouteConfigSpecRoutesInner addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Classification tags, will be applied to methods in the generated OpenAPI documentation
   * @return tags
  **/
  @jakarta.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner title(String title) {
    this.title = title;
    return this;
  }

   /**
   * An optional title, intended to apply to all operations in this path.
   * @return title
  **/
  @jakarta.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner tokenRelay(Boolean tokenRelay) {
    this.tokenRelay = tokenRelay;
    return this;
  }

   /**
   * Pass currently-authenticated user&#39;s identity token to application service
   * @return tokenRelay
  **/
  @jakarta.annotation.Nullable
  public Boolean getTokenRelay() {
    return tokenRelay;
  }

  public void setTokenRelay(Boolean tokenRelay) {
    this.tokenRelay = tokenRelay;
  }


  public V1SpringCloudGatewayRouteConfigSpecRoutesInner uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * (Optional) Full uri, will override &#x60;service.name&#x60; and &#x60;service.uri&#x60;
   * @return uri
  **/
  @jakarta.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpringCloudGatewayRouteConfigSpecRoutesInner v1SpringCloudGatewayRouteConfigSpecRoutesInner = (V1SpringCloudGatewayRouteConfigSpecRoutesInner) o;
    return Objects.equals(this.description, v1SpringCloudGatewayRouteConfigSpecRoutesInner.description) &&
        Objects.equals(this.filters, v1SpringCloudGatewayRouteConfigSpecRoutesInner.filters) &&
        Objects.equals(this.metadata, v1SpringCloudGatewayRouteConfigSpecRoutesInner.metadata) &&
        Objects.equals(this.model, v1SpringCloudGatewayRouteConfigSpecRoutesInner.model) &&
        Objects.equals(this.openapi, v1SpringCloudGatewayRouteConfigSpecRoutesInner.openapi) &&
        Objects.equals(this.order, v1SpringCloudGatewayRouteConfigSpecRoutesInner.order) &&
        Objects.equals(this.predicates, v1SpringCloudGatewayRouteConfigSpecRoutesInner.predicates) &&
        Objects.equals(this.ssoEnabled, v1SpringCloudGatewayRouteConfigSpecRoutesInner.ssoEnabled) &&
        Objects.equals(this.tags, v1SpringCloudGatewayRouteConfigSpecRoutesInner.tags) &&
        Objects.equals(this.title, v1SpringCloudGatewayRouteConfigSpecRoutesInner.title) &&
        Objects.equals(this.tokenRelay, v1SpringCloudGatewayRouteConfigSpecRoutesInner.tokenRelay) &&
        Objects.equals(this.uri, v1SpringCloudGatewayRouteConfigSpecRoutesInner.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, filters, metadata, model, openapi, order, predicates, ssoEnabled, tags, title, tokenRelay, uri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpringCloudGatewayRouteConfigSpecRoutesInner {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    openapi: ").append(toIndentedString(openapi)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    predicates: ").append(toIndentedString(predicates)).append("\n");
    sb.append("    ssoEnabled: ").append(toIndentedString(ssoEnabled)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    tokenRelay: ").append(toIndentedString(tokenRelay)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("filters");
    openapiFields.add("metadata");
    openapiFields.add("model");
    openapiFields.add("openapi");
    openapiFields.add("order");
    openapiFields.add("predicates");
    openapiFields.add("ssoEnabled");
    openapiFields.add("tags");
    openapiFields.add("title");
    openapiFields.add("tokenRelay");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to V1SpringCloudGatewayRouteConfigSpecRoutesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1SpringCloudGatewayRouteConfigSpecRoutesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1SpringCloudGatewayRouteConfigSpecRoutesInner is not found in the empty JSON string", V1SpringCloudGatewayRouteConfigSpecRoutesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1SpringCloudGatewayRouteConfigSpecRoutesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1SpringCloudGatewayRouteConfigSpecRoutesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("filters") != null && !jsonObj.get("filters").isJsonNull() && !jsonObj.get("filters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `filters` to be an array in the JSON string but got `%s`", jsonObj.get("filters").toString()));
      }
      // validate the optional field `model`
      if (jsonObj.get("model") != null && !jsonObj.get("model").isJsonNull()) {
        V1SpringCloudGatewayRouteConfigSpecRoutesInnerModel.validateJsonElement(jsonObj.get("model"));
      }
      // validate the optional field `openapi`
      if (jsonObj.get("openapi") != null && !jsonObj.get("openapi").isJsonNull()) {
        V1SpringCloudGatewayRouteConfigSpecRoutesInnerOpenapi.validateJsonElement(jsonObj.get("openapi"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("predicates") != null && !jsonObj.get("predicates").isJsonNull() && !jsonObj.get("predicates").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `predicates` to be an array in the JSON string but got `%s`", jsonObj.get("predicates").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1SpringCloudGatewayRouteConfigSpecRoutesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1SpringCloudGatewayRouteConfigSpecRoutesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1SpringCloudGatewayRouteConfigSpecRoutesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1SpringCloudGatewayRouteConfigSpecRoutesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1SpringCloudGatewayRouteConfigSpecRoutesInner>() {
           @Override
           public void write(JsonWriter out, V1SpringCloudGatewayRouteConfigSpecRoutesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1SpringCloudGatewayRouteConfigSpecRoutesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1SpringCloudGatewayRouteConfigSpecRoutesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1SpringCloudGatewayRouteConfigSpecRoutesInner
  * @throws IOException if the JSON string is invalid with respect to V1SpringCloudGatewayRouteConfigSpecRoutesInner
  */
  public static V1SpringCloudGatewayRouteConfigSpecRoutesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1SpringCloudGatewayRouteConfigSpecRoutesInner.class);
  }

 /**
  * Convert an instance of V1SpringCloudGatewayRouteConfigSpecRoutesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

