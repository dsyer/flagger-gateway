/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vmware.tanzu.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vmware.tanzu.models.V1SpringCloudGatewayRouteConfigSpecOpenapiGeneration;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * V1SpringCloudGatewayRouteConfigSpecOpenapi
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class V1SpringCloudGatewayRouteConfigSpecOpenapi {
  public static final String SERIALIZED_NAME_COMPONENTS = "components";
  @SerializedName(SERIALIZED_NAME_COMPONENTS)
  private Object components;

  public static final String SERIALIZED_NAME_GENERATION = "generation";
  @SerializedName(SERIALIZED_NAME_GENERATION)
  private V1SpringCloudGatewayRouteConfigSpecOpenapiGeneration generation;

  public static final String SERIALIZED_NAME_REF = "ref";
  @SerializedName(SERIALIZED_NAME_REF)
  private String ref;

  public V1SpringCloudGatewayRouteConfigSpecOpenapi() {
  }

  public V1SpringCloudGatewayRouteConfigSpecOpenapi components(Object components) {
    this.components = components;
    return this;
  }

   /**
   * Holds a set of reusable objects for different aspects of the OAS, as defined by https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.1.md#componentsObject
   * @return components
  **/
  @jakarta.annotation.Nullable
  public Object getComponents() {
    return components;
  }

  public void setComponents(Object components) {
    this.components = components;
  }


  public V1SpringCloudGatewayRouteConfigSpecOpenapi generation(V1SpringCloudGatewayRouteConfigSpecOpenapiGeneration generation) {
    this.generation = generation;
    return this;
  }

   /**
   * Get generation
   * @return generation
  **/
  @jakarta.annotation.Nullable
  public V1SpringCloudGatewayRouteConfigSpecOpenapiGeneration getGeneration() {
    return generation;
  }

  public void setGeneration(V1SpringCloudGatewayRouteConfigSpecOpenapiGeneration generation) {
    this.generation = generation;
  }


  public V1SpringCloudGatewayRouteConfigSpecOpenapi ref(String ref) {
    this.ref = ref;
    return this;
  }

   /**
   * A reference to the openapi used for this route config, for informative purposes
   * @return ref
  **/
  @jakarta.annotation.Nullable
  public String getRef() {
    return ref;
  }

  public void setRef(String ref) {
    this.ref = ref;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SpringCloudGatewayRouteConfigSpecOpenapi v1SpringCloudGatewayRouteConfigSpecOpenapi = (V1SpringCloudGatewayRouteConfigSpecOpenapi) o;
    return Objects.equals(this.components, v1SpringCloudGatewayRouteConfigSpecOpenapi.components) &&
        Objects.equals(this.generation, v1SpringCloudGatewayRouteConfigSpecOpenapi.generation) &&
        Objects.equals(this.ref, v1SpringCloudGatewayRouteConfigSpecOpenapi.ref);
  }

  @Override
  public int hashCode() {
    return Objects.hash(components, generation, ref);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SpringCloudGatewayRouteConfigSpecOpenapi {\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    generation: ").append(toIndentedString(generation)).append("\n");
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("components");
    openapiFields.add("generation");
    openapiFields.add("ref");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to V1SpringCloudGatewayRouteConfigSpecOpenapi
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1SpringCloudGatewayRouteConfigSpecOpenapi.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1SpringCloudGatewayRouteConfigSpecOpenapi is not found in the empty JSON string", V1SpringCloudGatewayRouteConfigSpecOpenapi.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1SpringCloudGatewayRouteConfigSpecOpenapi.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1SpringCloudGatewayRouteConfigSpecOpenapi` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `generation`
      if (jsonObj.get("generation") != null && !jsonObj.get("generation").isJsonNull()) {
        V1SpringCloudGatewayRouteConfigSpecOpenapiGeneration.validateJsonElement(jsonObj.get("generation"));
      }
      if ((jsonObj.get("ref") != null && !jsonObj.get("ref").isJsonNull()) && !jsonObj.get("ref").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1SpringCloudGatewayRouteConfigSpecOpenapi.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1SpringCloudGatewayRouteConfigSpecOpenapi' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1SpringCloudGatewayRouteConfigSpecOpenapi> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1SpringCloudGatewayRouteConfigSpecOpenapi.class));

       return (TypeAdapter<T>) new TypeAdapter<V1SpringCloudGatewayRouteConfigSpecOpenapi>() {
           @Override
           public void write(JsonWriter out, V1SpringCloudGatewayRouteConfigSpecOpenapi value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1SpringCloudGatewayRouteConfigSpecOpenapi read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1SpringCloudGatewayRouteConfigSpecOpenapi given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1SpringCloudGatewayRouteConfigSpecOpenapi
  * @throws IOException if the JSON string is invalid with respect to V1SpringCloudGatewayRouteConfigSpecOpenapi
  */
  public static V1SpringCloudGatewayRouteConfigSpecOpenapi fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1SpringCloudGatewayRouteConfigSpecOpenapi.class);
  }

 /**
  * Convert an instance of V1SpringCloudGatewayRouteConfigSpecOpenapi to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

